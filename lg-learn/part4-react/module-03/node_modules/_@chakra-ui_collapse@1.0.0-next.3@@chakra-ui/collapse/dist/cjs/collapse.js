"use strict";

exports.__esModule = true;
exports.Collapse = void 0;

var _system = require("@chakra-ui/system");

var _transition = require("@chakra-ui/transition");

var _utils = require("@chakra-ui/utils");

var _rect = require("@reach/rect");

var React = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var Collapse = /*#__PURE__*/React.forwardRef(function Collapse(props, forwardedRef) {
  var _rect$height;

  var isOpen = props.isOpen,
      children = props.children,
      config = props.config,
      _props$startingHeight = props.startingHeight,
      startingHeight = _props$startingHeight === void 0 ? 0 : _props$startingHeight,
      _props$animateOpacity = props.animateOpacity,
      animateOpacity = _props$animateOpacity === void 0 ? true : _props$animateOpacity,
      className = props.className,
      htmlStyle = props.style,
      _props$timeout = props.timeout,
      timeout = _props$timeout === void 0 ? 150 : _props$timeout,
      _props$easing = props.easing,
      easing = _props$easing === void 0 ? "ease" : _props$easing,
      rest = _objectWithoutPropertiesLoose(props, ["isOpen", "children", "config", "startingHeight", "animateOpacity", "className", "style", "timeout", "easing"]);

  var getStr = function getStr(property) {
    return property + " " + timeout + "ms " + easing;
  };

  var transition = getStr("height") + ", " + getStr("opacity") + ", " + getStr("transform");

  var _React$useState = React.useState(true),
      hidden = _React$useState[0],
      setHidden = _React$useState[1];

  var child = children;

  if (typeof children === "string") {
    child = /*#__PURE__*/React.createElement("div", null, children);
  }

  var _child = React.Children.only(child);

  var ref = React.useRef(null);
  var rect = (0, _rect.useRect)(ref, true);
  var height = (_rect$height = rect == null ? void 0 : rect.height) != null ? _rect$height : 0;
  var styles = {
    init: {
      height: startingHeight,
      opacity: startingHeight ? 1 : 0
    },
    entered: {
      height: height,
      opacity: 1,
      transform: "translateY(0)"
    },
    exiting: {
      height: startingHeight,
      opacity: startingHeight ? 1 : 0,
      transform: startingHeight > 0 ? "translateY(0)" : "translateY(-0.5rem)"
    }
  };
  return /*#__PURE__*/React.createElement(_transition.Transition, {
    "in": isOpen,
    styles: config || styles,
    onEntered: function onEntered() {
      return setHidden(false);
    },
    onExited: function onExited() {
      return setHidden(true);
    },
    timeout: {
      enter: 0,
      exit: timeout
    },
    transition: transition,
    unmountOnExit: false
  }, function (styles) {
    return /*#__PURE__*/React.createElement(_system.chakra.div, _extends({
      ref: forwardedRef,
      className: (0, _utils.cx)("chakra-collapse", className),
      "aria-hidden": (0, _utils.ariaAttr)(hidden)
    }, rest, {
      style: _extends({}, styles, {
        overflow: "hidden",
        opacity: animateOpacity ? styles.opacity : 1,
        willChange: "height, opacity, transform"
      }, htmlStyle)
    }), /*#__PURE__*/React.cloneElement(_child, {
      ref: (0, _utils.mergeRefs)(ref, _child.props.ref)
    }));
  });
});
exports.Collapse = Collapse;

if (_utils.__DEV__) {
  Collapse.displayName = "Collapse";
}
//# sourceMappingURL=collapse.js.map