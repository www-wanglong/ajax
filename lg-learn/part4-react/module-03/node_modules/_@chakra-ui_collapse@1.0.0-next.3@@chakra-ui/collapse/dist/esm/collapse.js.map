{"version":3,"sources":["../../src/collapse.tsx"],"names":["chakra","Transition","ariaAttr","cx","mergeRefs","__DEV__","useRect","React","Collapse","forwardRef","props","forwardedRef","isOpen","children","config","startingHeight","animateOpacity","className","style","htmlStyle","timeout","easing","rest","getStr","property","transition","hidden","setHidden","useState","child","_child","Children","only","ref","useRef","rect","height","styles","init","opacity","entered","transform","exiting","enter","exit","overflow","willChange","cloneElement","displayName"],"mappings":"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","sourcesContent":["import { chakra, PropsOf, forwardRef } from \"@chakra-ui/system\"\nimport {\n  Transition,\n  TransitionProps,\n  TransitionStyles,\n} from \"@chakra-ui/transition\"\nimport { ariaAttr, cx, mergeRefs, __DEV__ } from \"@chakra-ui/utils\"\nimport { useRect } from \"@reach/rect\"\nimport * as React from \"react\"\n\nexport type CollapseProps = PropsOf<typeof chakra.div> & {\n  /**\n   * If `true`, the content will be visible\n   */\n  isOpen?: boolean\n  /**\n   * The height you want the content in it's collapsed state.\n   * @default 0\n   */\n  startingHeight?: number\n  /**\n   * Custom styles for the Transition component's appear, entered and exiting states\n   */\n  config?: TransitionProps[\"styles\"]\n  /**\n   * If `true`, the opacity of the content will be animated\n   * @default true\n   */\n  animateOpacity?: boolean\n  /**\n   * The CSS `transition-duration` (in ms) to apply for the collapse animation\n   *\n   * @default\n   * 150\n   */\n  timeout?: number\n  /**\n   * The CSS `transition-timing-function` to apply for the collapse animation\n   *\n   * @default\n   * \"ease\"\n   */\n  easing?: string\n}\n\nexport const Collapse = React.forwardRef(function Collapse(\n  props: CollapseProps,\n  forwardedRef: React.Ref<any>,\n) {\n  const {\n    isOpen,\n    children,\n    config,\n    startingHeight = 0,\n    animateOpacity = true,\n    className,\n    style: htmlStyle,\n    timeout = 150,\n    easing = \"ease\",\n    ...rest\n  } = props\n\n  const getStr = (property: string) => `${property} ${timeout}ms ${easing}`\n\n  const transition = `${getStr(\"height\")}, ${getStr(\"opacity\")}, ${getStr(\n    \"transform\",\n  )}`\n\n  const [hidden, setHidden] = React.useState(true)\n\n  type ChildElement = React.ReactElement<{ ref: React.Ref<any> }>\n\n  let child = children\n\n  if (typeof children === \"string\") {\n    child = <div>{children}</div>\n  }\n\n  const _child = React.Children.only(child) as ChildElement\n\n  const ref = React.useRef<HTMLDivElement>(null)\n\n  const rect = useRect(ref, true)\n  const height = rect?.height ?? 0\n\n  const styles: TransitionStyles = {\n    init: {\n      height: startingHeight,\n      opacity: startingHeight ? 1 : 0,\n    },\n    entered: {\n      height,\n      opacity: 1,\n      transform: \"translateY(0)\",\n    },\n    exiting: {\n      height: startingHeight,\n      opacity: startingHeight ? 1 : 0,\n      transform: startingHeight > 0 ? \"translateY(0)\" : \"translateY(-0.5rem)\",\n    },\n  }\n\n  return (\n    <Transition\n      in={isOpen}\n      styles={config || styles}\n      onEntered={() => setHidden(false)}\n      onExited={() => setHidden(true)}\n      timeout={{ enter: 0, exit: timeout }}\n      transition={transition}\n      unmountOnExit={false}\n    >\n      {(styles) => (\n        <chakra.div\n          ref={forwardedRef}\n          className={cx(\"chakra-collapse\", className)}\n          aria-hidden={ariaAttr(hidden)}\n          {...rest}\n          style={{\n            ...styles,\n            overflow: \"hidden\",\n            opacity: animateOpacity ? styles.opacity : 1,\n            willChange: \"height, opacity, transform\",\n            ...htmlStyle,\n          }}\n        >\n          {React.cloneElement(_child, {\n            ref: mergeRefs(ref, _child.props.ref),\n          })}\n        </chakra.div>\n      )}\n    </Transition>\n  )\n})\n\nif (__DEV__) {\n  Collapse.displayName = \"Collapse\"\n}\n"],"file":"collapse.js"}