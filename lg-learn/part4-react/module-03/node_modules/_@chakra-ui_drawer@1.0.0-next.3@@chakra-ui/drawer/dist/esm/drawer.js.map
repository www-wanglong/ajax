{"version":3,"sources":["../../src/drawer.tsx"],"names":["React","Slide","Fade","Modal","ModalContent","ModalOverlay","forwardRef","__DEV__","TransitionContext","createContext","content","overlay","displayName","useTransitionContext","useContext","DrawerTransition","props","in","inProp","children","placement","contentStyle","overlayStyle","Drawer","isOpen","onClose","rest","styles","DrawerContent","ref","DrawerOverlay","ModalBody","DrawerBody","ModalHeader","DrawerHeader","ModalFooter","DrawerFooter","ModalCloseButton","DrawerCloseButton"],"mappings":"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","sourcesContent":["import * as React from \"react\"\nimport { Slide, SlideProps, Fade } from \"@chakra-ui/transition\"\nimport {\n  Modal,\n  ModalProps,\n  ModalContentProps,\n  ModalContent,\n  ModalOverlayProps,\n  ModalOverlay,\n} from \"@chakra-ui/modal\"\nimport { forwardRef } from \"@chakra-ui/system\"\nimport { __DEV__ } from \"@chakra-ui/utils\"\n\ninterface TransitionStyles {\n  content: React.CSSProperties\n  overlay: React.CSSProperties\n}\n\nconst TransitionContext = React.createContext<TransitionStyles>({\n  content: {},\n  overlay: {},\n})\n\nif (__DEV__) {\n  TransitionContext.displayName = \"TransitionContext\"\n}\n\nconst useTransitionContext = () => React.useContext(TransitionContext)\n\ninterface DrawerTransitionProps {\n  in: boolean\n  children: (styles: TransitionStyles) => React.ReactNode\n  placement: SlideProps[\"placement\"]\n}\n\nfunction DrawerTransition(props: DrawerTransitionProps) {\n  const { in: inProp, children, placement } = props\n  return (\n    <Slide in={inProp} placement={placement}>\n      {(contentStyle) => (\n        <Fade in={inProp}>\n          {(overlayStyle) =>\n            children({ content: contentStyle, overlay: overlayStyle })\n          }\n        </Fade>\n      )}\n    </Slide>\n  )\n}\n\nif (__DEV__) {\n  DrawerTransition.displayName = \"DrawerTransition\"\n}\n\nexport interface DrawerProps extends ModalProps {\n  placement?: SlideProps[\"placement\"]\n  isFullHeight?: boolean\n}\n\nexport function Drawer(props: DrawerProps) {\n  const { isOpen, onClose, placement = \"right\", children, ...rest } = props\n  return (\n    <DrawerTransition in={isOpen} placement={placement}>\n      {(styles) => (\n        <TransitionContext.Provider value={styles}>\n          <Modal isOpen={true} onClose={onClose} {...rest}>\n            {children}\n          </Modal>\n        </TransitionContext.Provider>\n      )}\n    </DrawerTransition>\n  )\n}\n\nif (__DEV__) {\n  Drawer.displayName = \"Drawer\"\n}\n\nexport const DrawerContent = forwardRef<ModalContentProps>(\n  function DrawerContent(props, ref) {\n    const { content: styles } = useTransitionContext()\n    return (\n      <ModalContent\n        ref={ref}\n        position=\"fixed\"\n        style={styles}\n        marginTop=\"0\"\n        marginBottom=\"0\"\n        borderRadius=\"0\"\n        {...props}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  DrawerContent.displayName = \"DrawerContent\"\n}\n\nexport const DrawerOverlay = forwardRef<ModalOverlayProps>(\n  function DrawerOverlay(props, ref) {\n    const { overlay: styles } = useTransitionContext()\n    return (\n      <ModalOverlay\n        style={styles}\n        transition={\"all 0.2s\"}\n        ref={ref}\n        {...props}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  DrawerOverlay.displayName = \"DrawerOverlay\"\n}\n\nexport {\n  ModalBody as DrawerBody,\n  ModalHeader as DrawerHeader,\n  ModalFooter as DrawerFooter,\n  ModalCloseButton as DrawerCloseButton,\n} from \"@chakra-ui/modal\"\n"],"file":"drawer.js"}