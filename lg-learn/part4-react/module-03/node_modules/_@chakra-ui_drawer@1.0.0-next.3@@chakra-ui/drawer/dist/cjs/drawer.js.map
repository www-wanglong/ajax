{"version":3,"sources":["../../src/drawer.tsx"],"names":["TransitionContext","React","createContext","content","overlay","__DEV__","displayName","useTransitionContext","useContext","DrawerTransition","props","inProp","children","placement","contentStyle","overlayStyle","Drawer","isOpen","onClose","rest","styles","DrawerContent","ref","DrawerOverlay"],"mappings":"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","sourcesContent":["import * as React from \"react\"\nimport { Slide, SlideProps, Fade } from \"@chakra-ui/transition\"\nimport {\n  Modal,\n  ModalProps,\n  ModalContentProps,\n  ModalContent,\n  ModalOverlayProps,\n  ModalOverlay,\n} from \"@chakra-ui/modal\"\nimport { forwardRef } from \"@chakra-ui/system\"\nimport { __DEV__ } from \"@chakra-ui/utils\"\n\ninterface TransitionStyles {\n  content: React.CSSProperties\n  overlay: React.CSSProperties\n}\n\nconst TransitionContext = React.createContext<TransitionStyles>({\n  content: {},\n  overlay: {},\n})\n\nif (__DEV__) {\n  TransitionContext.displayName = \"TransitionContext\"\n}\n\nconst useTransitionContext = () => React.useContext(TransitionContext)\n\ninterface DrawerTransitionProps {\n  in: boolean\n  children: (styles: TransitionStyles) => React.ReactNode\n  placement: SlideProps[\"placement\"]\n}\n\nfunction DrawerTransition(props: DrawerTransitionProps) {\n  const { in: inProp, children, placement } = props\n  return (\n    <Slide in={inProp} placement={placement}>\n      {(contentStyle) => (\n        <Fade in={inProp}>\n          {(overlayStyle) =>\n            children({ content: contentStyle, overlay: overlayStyle })\n          }\n        </Fade>\n      )}\n    </Slide>\n  )\n}\n\nif (__DEV__) {\n  DrawerTransition.displayName = \"DrawerTransition\"\n}\n\nexport interface DrawerProps extends ModalProps {\n  placement?: SlideProps[\"placement\"]\n  isFullHeight?: boolean\n}\n\nexport function Drawer(props: DrawerProps) {\n  const { isOpen, onClose, placement = \"right\", children, ...rest } = props\n  return (\n    <DrawerTransition in={isOpen} placement={placement}>\n      {(styles) => (\n        <TransitionContext.Provider value={styles}>\n          <Modal isOpen={true} onClose={onClose} {...rest}>\n            {children}\n          </Modal>\n        </TransitionContext.Provider>\n      )}\n    </DrawerTransition>\n  )\n}\n\nif (__DEV__) {\n  Drawer.displayName = \"Drawer\"\n}\n\nexport const DrawerContent = forwardRef<ModalContentProps>(\n  function DrawerContent(props, ref) {\n    const { content: styles } = useTransitionContext()\n    return (\n      <ModalContent\n        ref={ref}\n        position=\"fixed\"\n        style={styles}\n        marginTop=\"0\"\n        marginBottom=\"0\"\n        borderRadius=\"0\"\n        {...props}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  DrawerContent.displayName = \"DrawerContent\"\n}\n\nexport const DrawerOverlay = forwardRef<ModalOverlayProps>(\n  function DrawerOverlay(props, ref) {\n    const { overlay: styles } = useTransitionContext()\n    return (\n      <ModalOverlay\n        style={styles}\n        transition={\"all 0.2s\"}\n        ref={ref}\n        {...props}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  DrawerOverlay.displayName = \"DrawerOverlay\"\n}\n\nexport {\n  ModalBody as DrawerBody,\n  ModalHeader as DrawerHeader,\n  ModalFooter as DrawerFooter,\n  ModalCloseButton as DrawerCloseButton,\n} from \"@chakra-ui/modal\"\n"],"file":"drawer.js"}